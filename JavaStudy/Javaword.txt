JAVA用語

■ 開発
ウォーターフォール開発
・開発手順を1つ1つ確認しながら工程を進めていく手法
・次のフェーズに進むと後戻りできない。

アジャイル開発
・できるだけ早くリリースしようとする手法
・システムの優先度を決め機能を最低限の状態にすることが多い。

マイグレーション
・古いものに入っているデータやプログラムを新しいものに移動する

デグレーション
・変更後他でバグが見つかったり不具合が起きて品質が落ちてしまうこと。

デプロイ
・アプリケーションをサーバーに置き利用できるようにすること。
・開発したものを適切な場所に置き利用できるようにすること。

コンフリクト
・複数のライブラリなどが同じ名前、空間、クラス、変数名を定義していて
  同時に利用できない状態。

環境
  開発環境（ローカル）
  ・個人のコンピューター内に構築された環境のこと。

  検証環境（ステージング）
  ・本番環境の類似環境を作りシュミレーション

  本番環境
  ・システムが製品として実際に稼働している環境のこと。

設計書／仕様書
  要件定義
  ・プロジェクトを始める前に必要な機能や要求をわかりやすくまとめていく作業のこと。

  基本設計書
  ・ソフトウェアの動きを外から見た際にどのような動きをするかを決めたもの。

  詳細設計書
  ・基本設計書で決められた動きをどう実現するかを決めたもの。

テスト
  単体テスト（UT）
  ・1つの関数やモジュールが正常に動作するかテストすること。

  結合テスト（CT／IT）
  ・複数の関数やモジュールを組み合わせて正常に動作するかテストすること。

  総合テスト（ST）
  ・実際の運用形態に沿ってテストすること。

エビデンス／証跡
・検証、システムの現状を記録し証拠として残すために作成されるもの。

データパッチ
ソフトに変更を加えるように用意された後付けプログラムのこと。

Access
何か見たいデータがあったり使いたいシステムがある場合その目的物に入ること。

マクロ
・Excel上で作業を記録し、自動的に実行してくれる機能のこと。

  VBA
  ・Microsoftが提供するアプリケーションで使用できるプログラミング言語

GAS（Google Apps Script）
・JavaScriptがベースで作られたプログラミング言語
・Googleサービスと提携している。

API
  WEB API
  ・HTTPプロトコルを用いてネットワーク越しに呼び出すインターフェースのこと。

  REST API
  ・Addressability,Stateless,Connectability,Uniform Interfaceに沿って
    構築されたシステムのHTTPでの呼び出しインターフェースのこと。

  SOAP
  ・異なるコンピュータ上で動作するプログラム同士がネットワークを通じて、
    連携して動作するための通信プロトコル。

Ajax
・JavaScriptとXMLを使って非同期にサーバーとの間の通信を行うこと。
  XML
  ・Extensible Markup Languageの略HTMLのようなもの。
  ・柔軟性がある

  JSON
  ・JavaScriptのオブジェクトの書き方を元にしたデータ定義方法。
  ・XMLより直感的

  ステータスコード
  ・HTMLを表示する前にブラウザが受信する３桁の番号

  クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）
  同一生成元ポリシーというポリシーの制限を緩めるもの。

バリデーション
入力内容や記述内容が要件を見たいているかの妥協性を確認すること。

データ連携
・異なるアプリやシステムを跨いでデータ共有、活用するために垣根を取り払うプロセス。
  
  Daemon
  ・UNIX系OSの常駐プログラム。

  CRON
  ・UNIX系OSのプログラム。
  ・指示した時間に動く。

  バッチ
  ・一定量のデータを集め一括で処理すること。

  ログ
  ・コンピュータのやったこと起こったことの記録。

  CSV
  ・Comma Separated Value
  ・値をコンマで区切ったデータのこと。
  
  TSV
  ・Tab Separated Values
  ・値をタブで区切ったデータのこと。

プルリクエスト（マージリクエスト）
・開発者のローカルリポジトリでの変更を他の開発者に通知する機能。

■ チケット管理ツール
  asana
  ・ワークマネジメントツール
  ・プロジェクト管理、タスク管理

  Backlog
  ・シンプルでわかりやすいUI、コラボレーション

  Jooto
  ・無料で全機能使える
  ・カードをドラック&ドロップ

  Readmine
  ・国内最高の人気
  ・ガンチャート

  Trello
  ・シンプルだが最低限だから進歩共有で劣る

■ バージョン管理
  集中型
  ・複数の作業者が同じファイル群を扱い1つのサーバで稼働する
  ・サーバ内のファイルが変更されると自分の環境に同期できる。

  分散型
  ・それぞれ独立したリポジトリを用意して他のリポジトリを同期することができる。

  Github
  ・グラフィカルにGitのリポジトリをホスティングできる。

  Backlog
  ・シンプルでわかりやすいUI、コラボレーション

  SourceTree
  ・GUIでGitコマンドを実行してくれる。

  Tortoise SVN
  ・集中型
  ・直感的

  Git Flow

    master
    ・リリースしたデータを置いておくブランチ

    release
    ・リリース前に準備、微調整を行うブランチ

    develop
    ・開発を行う部分

      feature
      ・ここの機能の実装や解決を行う。

■ FW／ライブラリ
FW
・アプリを開発するときに土台として機能させるソフトウェア。

  Spring Framework
  ・AOP：Aspect Orientation Programming
  ・システム内で行われ共通処理を抽出して集約をするプログラミング手法。
  ・DI：Dependency Injection
  ・クラス同士の依存関係を解消するためにオブジェクトを抽出する。

  Struts
  ・脆弱性がある
  ・学習コストが低い

  JSF（Java Server Faces）
  ・デザインと処理を分けて作ルことができる。

ライブラリ
・汎用性の高い複数のプログラムを再利用可能な形でひとまとまりにしたもの。
  Bootstrap
  ・HTML,CSS,javaScriptから構成される最も有名なフレームワーク。

  Flyway
  ・DB環境を移行して、同一状態の環境を手軽に構築するツール。

  Jackson
  ・形式データを処理するための高速で軽量なJavaライブラリ。

  jQuery
  ・より簡単に実現できる用意設計されたJavaScriptライブラリ。

  Junit
  ・Javaプログラムの単体テストを行うためのツール。

  Log4j
  ・Java用のログAPI

  Lombok
  ・冗長なコードを簡潔にするもの。

  ORM
  ・Object relational mapping
  ・データベースとオブジェクト言語の間の非互換なデータを変換するプログラミング技法。

■ 連絡ツール
  ChatWork
  ・LINEのように個人、グループチャットが使える。
  ・タスク管理、ファイル共有機能

  Slack
  ・米国製
  ・コードを投稿できるsnippet機能がある

  IP Messenger
  ・企業内のネットワークなどに限定して使うためのチャットアプリ。

■ Java
  Javadoc
  ・プログラムについて説明するドキュメントをソースコードに埋め込むためのもの。

  アノテーション
  ・重要な情報について統一的な表現で記述したい時のためのツール。

  メモリ管理
    ヒープ
    ・木構造の親要素と子要素が常に大きいか小さいまたは等しいという制約を満たすように構成されたもの。

    GC
    ・コンピュータプログラムが動的に確保したメモリ領域の内、不要になった領域を自動的に解放する機能。

  GoF
  ・The Gang Of Four
  ・オブジェクト指向における再利用のためのデザインパターン。

  デザインパターン
  ・23種類あるオブジェクト指向言語でよく使われる設計パターン。

■ その他
  オブジェクト指向
  ・プログラムをものの集まりとして考える。
  ・境目のあるコンピュータへの命令

  バッチ処理
  ・バッチ単位で行われる処理。
  ・ひとまとまりのデータを一括して処理する方式。

  コンパイル
  ・プログラミング言語で記述されたソースコードを
    コンピュータが実行可能な形式に変換する作業のこと。

  カバレッジ
  ・カバーしている範囲（網羅率）

  プラットホーム
  ・サービス、システム、ソフトウェアを提供、カスタマイズ、運営するために必要な土台となる環境。

